<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jiangdu的博客</title>
  
  <subtitle>jiangdu&#39;s blog</subtitle>
  <link href="https://satorimarch.github.io/atom.xml" rel="self"/>
  
  <link href="https://satorimarch.github.io/"/>
  <updated>2021-11-28T06:12:48.189Z</updated>
  <id>https://satorimarch.github.io/</id>
  
  <author>
    <name>jiangdu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="https://satorimarch.github.io/2021/11/28/test/"/>
    <id>https://satorimarch.github.io/2021/11/28/test/</id>
    <published>2021-11-27T16:00:00.000Z</published>
    <updated>2021-11-28T06:12:48.189Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>[TOC]</p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>标题样式来自[zj主题][1]^[1]^（这是一个参考链接，按住<kbd>ctrl</kbd>键并点击将自动打开浏览器并跳转至相关链接，其中上标<code>[1]</code>只是一个额外的标注）</p><p>注：部分样式需要在偏好设置中开启，如上下标、行内公式、图表等</p><p>行内公式：$\lim\limits_{x \to \infty} \exp(-x)=0$，行间公式：</p><script type="math/tex; mode=display">E_0 = mc^2 \\\quad\text{—— Albert Einstein}</script><p>推荐：<a href="http://draw.mathpix.com/">latex手写公式识别</a>、<a href="https://www.latexlive.com/">latex公式编辑器</a></p><p>可以直接用尖括号包裹URL链接或邮箱：<a href="https://emojixd.com/">https://emojixd.com/</a></p><blockquote><p>提示块标签</p><blockquote><p>嵌套提示块</p></blockquote></blockquote><ul><li><p>无序列表1</p></li><li><p>无序列表2</p></li></ul><ol><li>有序列表1<sup><a href="#fn_1" id="reffn_1">1</a></sup></li><li>有序列表2</li></ol><p>==文本高亮==，<strong>加粗</strong>，<em>斜体</em>，==<strong><em>斜体高亮加粗</em></strong>==，<del>删除线</del>，<u>下划线</u>。<code>&lt;font&gt;</code>标签被我用于一款小标签样式（<a href="https://www.antmoe.com/posts/3b43914f/">小康</a>）：<font>红色小标签</font>，可以通过设置<code>background-color</code>属性控制背景色，如：<font style="background-color:#8bc34a">绿色小标签</font>，为了方便，我提供了五种预定义的颜色（包括前面的红色、绿色）：<font title="blue">蓝色小标签</font>、<font title="yellow">黄色小标签</font>、<font title="gray">灰色小标签</font>。一些强调型格式：<span alt="underline">下划线</span>、<span alt="emp">着重号</span>、<span alt="wavy">波浪线</span>。其他：<span alt="hide">隐藏文本</span>，<span alt="hollow">空心字</span>，<span alt="blink">字体闪烁</span></p><p><span alt="rainbow">彩虹变换字体特效</span>（嫖自<a href="https://www.heson10.com/posts/21347.html">黑石大佬</a>🙇‍♀️），<span alt="modern">欢迎光临</span>（嫖自<a href="https://7bxing.com/friends/">QinXS</a>🙇‍♀️），<span alt="shake">抖音字效</span>（嫖自<a href="https://www.nykee.cn/">NyKee</a>🙇‍♀️）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br></pre></td></tr></table></figure><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 新增行</span></span><br><span class="line"><span class="deletion">- 删除行</span></span><br><span class="line">其他行</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">表头1</th><th style="text-align:center">表头2</th><th style="text-align:right">表头3</th></tr></thead><tbody><tr><td style="text-align:left">muggledy</td><td style="text-align:center">celestezj</td><td style="text-align:right">2021.9.25</td></tr><tr><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:right"></td></tr><tr><td style="text-align:left"></td><td style="text-align:center"></td></tr></tbody></table></div><p>提供另一种常见表格样式：</p><div alt="three-table"> <!--alt还可取值为"notitle-table"，一种无表头的小型表格--><table>  <tr>    <th alt="left">标题1</th>    <th alt="center">标题2</th>    <th alt="right">标题3</th>  </tr>  <tr>    <td alt="left">居左：alt="left"</td>    <td alt="center">居中：alt="center"</td>    <td alt="right">居右：alt="right"</td>  </tr>  <tr>    <td alt="left">x</td>    <td alt="center">y</td>    <td alt="right">z</td>  </tr></table></div><div alt="fig">表1.&nbsp;&nbsp;&nbsp;&nbsp;三线表</div><p><a href="#二级标题">跳转</a>至指定标题（锚点），也可以在任意位置通过<code>&lt;a name=&quot;锚点名&quot; alt=&quot;none&quot;&gt; &lt;/a&gt;</code>（为了方便编辑，typora会显示空标签或<code>style=&quot;display:none&quot;</code>的标签，但填充一个空格就可以被隐藏，在导出为HTML文件时，由于该款超链接样式有一个padding宽度，所以空链接还是会显示下划线，<code>alt=&quot;none&quot;</code>用于避免该问题，如果自定义的锚点有文字说明，则不要使用<code>alt=&quot;none&quot;</code>）设定锚点，示例：<a href="#star">求点个赞呗</a></p><p><a href="#" alt="null">无样式链接</a>，主要用于图片超链接，如：<a href="#" alt="null"><img src="https://img.shields.io/badge/-GitHub-181717?style=flat-square&logo=github"><img src="https://img.shields.io/badge/-Git-F05032?style=flat-square&logo=git&logoColor=white"></a></p><p>上下标：X^2^, H~2~o，下标如果是多个单词或字符并以空格分隔，需要对空格进行转义，即在空格前面加<code>\</code>，譬如<code>X~下标1\ 下标2~</code>（X~下标1\ 下标2~）。要显示*特殊字符等，也是通过反斜杠转义</p><p><ruby>Base<rp> (</rp><rt>top</rt><rp>) </rp></ruby>、<ruby>佐天泪子<rp> (</rp><rt>xiān qún kuáng mó</rt><rp>) </rp></ruby>、<ruby>超電磁砲<rp> (</rp><rt>レールガン</rt><rp>) </rp></ruby></p><p><img src="./temp/demo.jpg" style="zoom: 67%;" alt="shadow-可惜默认不支持图释" /></p><p>注：按<code>![shadow-随便写]()</code>（或<code>&lt;img src=&quot;...&quot; alt=&quot;shadow-随便写&quot;&gt;</code>）插入图片时会显示阴影，否则没有，类似的，设为<code>alt=&quot;blur-随便写&quot;</code>时会有模糊效果，设为<code>alt=&quot;gray-随便写&quot;</code>时图片默认为暗灰色。右键图片可以进行指定比例的缩放，任意比例可以通过<code>style=&quot;zoom:0.x&quot;</code>属性实现</p><p>目前会对图片自动编号，但要正确显示图释（<code>alt</code>属性值），还需额外修改<u>frame.js</u>源码（在安装路径<span alt="str">Typora/resources/app/app/window/</span>下），分别定位到<code>h=&quot;&lt;span md-inline=&#39;&quot;+v+&quot;&#39;&quot;+S+&quot; contenteditable=&#39;false&#39; class=&#39;md-image&quot;+L+&quot;&#39; data-src=&#39;&quot;+F+&quot;&#39; &quot;+b+&quot;&gt;</code>以及<code>h=&quot;&lt;span md-inline=&#39;&quot;+v+&quot;&#39;&quot;+S+&quot; contenteditable=&#39;false&#39; class=&#39;md-image md-img-loaded&quot;+w+&quot;&#39; &quot;+b+&quot;&gt;</code>处（注意Typora版本不同，相关代码可能有所区别），将两处末尾的<code>&quot;&gt;</code>都替换为以下字符串即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; alt=&#x27;&quot;</span>+ (k.getAttribute(<span class="string">&quot;alt&quot;</span>) ? <span class="string">&quot;. &quot;</span>+(<span class="regexp">/^(shadow-|blur-|gray-)?(.*)$/</span>.exec(k.getAttribute(<span class="string">&quot;alt&quot;</span>))[<span class="number">2</span>]) : <span class="string">&quot;&quot;</span>) +<span class="string">&quot;&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>或者直接在图片下方手动写图释（适用于非img标签）：<code>&lt;div alt=&quot;fig&quot;&gt;图释说明&lt;/div&gt;</code></p><audio controls="controls">  <source src="./temp/The Sound Of Silence.mp3" type="audio/mp3" /></audio><blockquote><p>可以将<code>&lt;audio&gt;</code>音频包裹在<code>&lt;center&gt;&lt;/center&gt;</code>中居中显示</p></blockquote><p>插入网易云的外链播放器（<code>&lt;iframe&gt;</code>，可嵌入油管等平台视频）：</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" src="//music.163.com/outchain/player?type=2&id=1342183925&auto=0"></iframe><video src="./temp/难破船.mp4"></video><p><details>    <summary>折叠标签</summary>    青青子衿，悠悠我心</details></p><blockquote><p>关于Typora对HTML的支持说明：<a href="https://support.typora.io/HTML/">https://support.typora.io/HTML/</a></p></blockquote><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">Emoji表情符号</a>：:smile:（<code>:smile:</code>），Decimal NCRs或Hexadecimal NCRs^[2]^编码也是受支持的，譬如“笑哭”：&#128514;（<code>&amp;#128514;</code>）或&#x1F602;（<code>&amp;#x1F602;</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pie</span><br><span class="line">    title Pie Chart</span><br><span class="line">    &quot;Dogs&quot; : 386</span><br><span class="line">    &quot;Cats&quot; : 85</span><br><span class="line">    &quot;Rats&quot; : 150 </span><br></pre></td></tr></table></figure><p><a href="https://mermaid.live/edit">在线Mermaid编辑器</a>、<a href="https://mubu.com/home">幕布脑图</a>（MD文档以OPML格式导出然后借助幕布转换为思维脑图）</p><blockquote><p>更多绘图参考[官方文档][]（这是另一种参考链接写法）</p></blockquote><p>以下两种嵌入式绘图虽然更加美观，但是都无法在typora中直接编辑，只能用于查看，不太方便：</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" height="320px" src="./temp/markmap.html" width></iframe><p>该脑图由<a href="https://markmap.js.org/">markmap</a>提供支持，其直接将MD格式代码转换为脑图，可以作为VS Code的插件使用</p><center><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" height="400px" viewBox="-0.5 -0.5 1071 773" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2021-11-15T07:08:52.373Z&quot; agent=&quot;5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36&quot; etag=&quot;aOnjZZMrixLFimZz001-&quot; version=&quot;15.7.3&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;07fea595-8f29-1299-0266-81d95cde20df&quot; name=&quot;Page-1&quot;&gt;7Zpdk5o8FMc/jZfrkDeEy3Xdtjed6cx25rnOIylmisbGuGI/fQMEAZN1sY2uW+qNchKS8P9xPOcERuhhmX+UdL34LBKWjWCQ5CM0G0F4F4NQfxWWvbGEpDKkkieVCTSGJ/6TGWNgrFuesE2noxIiU3zdNc7FasXmqmOjUopdt9s3kXVnXdOUWYanOc1s6388UQtjBWHcNHxiPF2YqSM4qRr+p/PvqRTblZlvJVasalnSehhzjZsFTcSuZUKPI/QghVDVr2X+wLJC1lqx6rwPL7QelizZSvU5YQJRdcozzbbmus3K1L4WYrfgij2t6bw43mnYIzT9xrPsQWRCll0QgPf3U6LtqaQJ15PXbeW1N+YZlxoVFyvdxOhGr3G6UVJ8Z0f9F2qZ6SNQzCSa0fRMEGFM9Oqn9qWaq39mUrG8ZTKX/pGJJVNyr7uYVojjydjclOYmBTjEYxI0HyPHrnUH1PAWLfgAGSM1d116mK2RX/8wBF6igYdMI7RpEIxr02sESDAO2tyQDx5kyDwih3fEvXmAwItHhAMmgAIHAdifwMQLgcnrBFiiI6c5fFWhyj8PytaxFVlat/u+qGYx9Ukt2yoFp+5TyTKq+HM3+rukM3N8EVyvpRVMkP331bhLPdBGbOWcmXPbkbnHcABYwykqU6as4UqqBxF6go68uNqHIJoE787VXKkAQm+ZCsReaDxGJMTwb6ABgy6Nvn+CXmjUgwzTNxyJGYrwGMfNJ+pJg8TjuH2ajywNAS9w3qmruOCQ3jmCH++AQ/YOR5pcRo6eHhF6IeCnjH+nLuAgAPq7AIi8EOhRuv9Lk72nyQiRPsN5TJORvSfwhUqqh2CyXNcxdX0Xlw6iPY+v0q9C+93sjtjszQ4oiOpjM0TBdV2svLwWMh2R2Uv+5sGZEAptQSPocKbIcZdAL65k1/w56C8rzXha/DHNtQgaCZoWF8/nNLs3DUueJMUolsongFwPgCv3JXF43YBu1/y5/Xf21xJwbURem4BdjOdoOAQcEf3qBPwU4O905xFaYTV2bv0i0tl1BwC7cHR35usdxT/Cg4dckZd42uX3ESrSLc7jG8I25Frd5VXAk1cd+vwZHruS/7pfM205IwFriWmHjHZQIb5ktaJFDOLOZiGwJL5Y9ortUtxIeEYGdQsSkreT0K6ljYRnpEC3IGH8dhKerlL3v6XjuVWqh0QQ2YlgEJFrVqPYrkb3t1aN+qg6A3Is9OuvwiDXRhHsbvFPvKQNdkG6v7WC9DIQ3FvJ1xPerkP3t1aHXkb48nnjGwrvKj/DTBk9OvqHP7aibrjblErdF8EyWOdlbKvb9a+0+J5xqhPkpe6iuNJjmHH1mqqhq14Xo1yhRMERdXA6aPugbG09R87HBBFwUMbEA1Uy6KrV8ToTmpzxgp8PAIOuPx0AYNj/QRnwQsAuMXN8YxHlgo9XHAguu7OpD5v3yasHXs37+ujxFw==&lt;/diagram&gt;&lt;/mxfile&gt;" onclick="(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&amp;&amp;src.nodeName.toLowerCase()!='a'){src=src.parentNode;}if(src==null){if(svg.wnd!=null&amp;&amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data=='ready'&amp;&amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute('content')),'*');window.removeEventListener('message',r);}};window.addEventListener('message',r);svg.wnd=window.open('https://viewer.diagrams.net/?client=1&amp;page=0&amp;edit=_blank');}}})(this);" style="cursor:pointer;max-width:100%;max-height:773px;"><defs/><g><rect x="100.5" y="610.5" width="120" height="130" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="300.5" y="690.5" width="120" height="50" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="500.5" y="640.5" width="120" height="100" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="700.5" y="570.5" width="120" height="170" fill="#12aab5" stroke="none" pointer-events="all"/><path d="M 40.5 740.5 L 40.5 270.6" fill="none" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 40.5 263.85 L 45 272.85 L 40.5 270.6 L 36 272.85 Z" fill="#000000" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/><rect x="100.5" y="480.5" width="120" height="130" fill="#f08705" stroke="none" pointer-events="all"/><rect x="100.5" y="350.5" width="120" height="130" fill="#e85642" stroke="none" pointer-events="all"/><rect x="300.5" y="530.5" width="120" height="160" fill="#f08705" stroke="none" pointer-events="all"/><rect x="300.5" y="500.5" width="120" height="30" fill="#e85642" stroke="none" pointer-events="all"/><rect x="500.5" y="480.5" width="120" height="160" fill="#f08705" stroke="none" pointer-events="all"/><rect x="500.5" y="300.5" width="120" height="180" fill="#e85642" stroke="none" pointer-events="all"/><path d="M 40.5 740.5 L 950.4 740.5" fill="none" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 957.15 740.5 L 948.15 745 L 950.4 740.5 L 948.15 736 Z" fill="#000000" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/><rect x="970.5" y="728.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 731px; margin-left: 973px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Parameter x</div></div></div></foreignObject><text x="973" y="749" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px">Parameter...</text></switch></g><rect x="100.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 161px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x1</div></div></div></foreignObject><text x="161" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x1</text></switch></g><rect x="300.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 361px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x2</div></div></div></foreignObject><text x="361" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x2</text></switch></g><rect x="500.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 561px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x3</div></div></div></foreignObject><text x="561" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x3</text></switch></g><rect x="860.5" y="140.5" width="35" height="30" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="860.5" y="100.5" width="35" height="30" fill="#f08705" stroke="none" pointer-events="all"/><rect x="860.5" y="60.5" width="35" height="30" fill="#e85642" stroke="none" pointer-events="all"/><rect x="900.5" y="65.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 68px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 1</div></div></div></foreignObject><text x="903" y="83" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 1</text></switch></g><rect x="900.5" y="105.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 108px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 2</div></div></div></foreignObject><text x="903" y="123" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 2</text></switch></g><rect x="900.5" y="145.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 148px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 3</div></div></div></foreignObject><text x="903" y="163" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 3</text></switch></g><rect x="0.5" y="231.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 234px; margin-left: 3px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Parameter y</div></div></div></foreignObject><text x="3" y="252" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px">Parameter...</text></switch></g><rect x="8.5" y="610.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 673px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y1</div></div></div></foreignObject><text x="24" y="678" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y1</text></switch></g><rect x="8.5" y="480.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 543px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y2</div></div></div></foreignObject><text x="24" y="548" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y2</text></switch></g><rect x="8.5" y="350.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 413px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y3</div></div></div></foreignObject><text x="24" y="418" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y3</text></switch></g><rect x="40.5" y="0.5" width="810" height="45" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 21px; margin-left: 446px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 30px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: nowrap;"><font style="font-size: 30px">Diagram title</font></div></div></div></foreignObject><text x="446" y="30" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="30px" text-anchor="middle" font-weight="bold">Diagram title</text></switch></g><rect x="700.5" y="520.5" width="120" height="50" fill="#f08705" stroke="none" pointer-events="all"/><rect x="700.5" y="410.5" width="120" height="110" fill="#e85642" stroke="none" pointer-events="all"/><rect x="700.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 761px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x4</div></div></div></foreignObject><text x="761" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x4</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg></center><div alt="fig">图2.&nbsp;&nbsp;&nbsp;&nbsp;柱状图</div><p><a href="https://app.diagrams.net/?src=about#G1XbVy9iD3kEJMiCqG2IceUlNBIzMbcJYS">在线编辑地址</a>，该图表由<a href="https://www.diagrams.net/">drawio</a>提供支持（提供iframe嵌入代码和svg嵌入代码），还支持UML类图、Network网络拓扑图、Flowcharts流程图、Tables表格等众多图表类型</p><p>时间轴（Volantis）：</p><div alt="timeline">    <div alt="timenode">        <div alt="meta">2019.9 ~ 2022.6 <a href="#">家里蹲B</a></div>        <div alt="body">            人言落日是天涯，望极天涯不见家。            已恨碧山相阻隔，碧山还被暮云遮。        </div>    </div>    <div alt="timenode">        <div alt="meta">2015.9 ~ 2019.6 <a href="#">家里蹲A</a></div>        <div alt="body">            看花开花落，谈笑风生...        </div>    </div></div><p>任务列表：</p><ul><li>[ ] 未完成任务1</li><li>[ ] 未完成任务2</li><li>[x] 已完成任务1</li><li>[x] 已完成任务2</li></ul><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.Println(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><hr><script type="math/tex; mode=display">F=ma</script><script type="math/tex; mode=display">\sum_{i=0}^{n}a_i</script><p>试试行间公式: $ f ^ { \prime } ( x ) = 2 x ^ { 2 } $</p><hr><mark class="hl-label red">这是红色</mark> <mark class="hl-label yellow">这是黄色</mark> <mark class="hl-label default">这是灰色</mark> <mark class="hl-label green">这是绿色</mark> <hr><p><sup><a href="#fn_这是脚注" id="reffn_这是脚注">这是脚注</a></sup></p><p>这也是脚注<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><hr><blockquote id="fn_这是脚注"><sup>这是脚注</sup>. 我是一个脚注<a href="#reffn_这是脚注" title="Jump back to footnote [这是脚注] in the text."> &#8617;</a></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C#教程[1] 简介</title>
    <link href="https://satorimarch.github.io/2021/11/23/c-sharp%E6%95%99%E7%A8%8B[1]%E7%AE%80%E4%BB%8B/"/>
    <id>https://satorimarch.github.io/2021/11/23/c-sharp%E6%95%99%E7%A8%8B[1]%E7%AE%80%E4%BB%8B/</id>
    <published>2021-11-22T16:00:00.000Z</published>
    <updated>2021-11-27T17:32:39.363Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>C#是微软推出的一种基于.NET框架的、面向对象的高级编程语言。C#是一种由C和C++派生出来的面向对象的编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性，使其成为C语言家族中的一种高效强大的编程语言。C#以.NET框架类库作为基础，拥有类似Visual Basic的快速开发能力。C#由安德斯·海尔斯伯格主持开发，微软在2000年发布了这种语言，希望借助这种语言来取代Java。<a href="%E6%9D%A5%E8%87%AA%5B%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91%5D(https://zh.wikipedia.org/wiki/C%E2%99%AF)">^1</a></p></blockquote><h1 id="第一个C-程序"><a href="#第一个C-程序" class="headerlink" title="第一个C#程序"></a>第一个C#程序</h1><p>大家先来看一个在VS2019里新建C#控制台应用生成的默认程序（代码中的 <code>//</code> 表示单行注释）：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp</span> <span class="comment">// ConsoleApp为命名空间(namespace)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span> <span class="comment">// Program是一个&quot;类&quot;(class)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>) <span class="comment">// Main方法</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 输出语句</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>让我们看一下上面程序的各个部分：<a href="%E6%9D%A5%E8%87%AA%5B%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%5D(https://www.runoob.com/csharp/csharp-program-structure.html)">^2</a></p><ul><li><p>程序的第一行 <strong>using System;</strong> - <strong>using</strong> 关键字用于在程序中包含 <strong>System</strong> 命名空间。 一个程序一般有多个 <strong>using</strong> 语句。</p></li><li><p>下一行是 <strong>namespace</strong> 声明。一个 <strong>namespace</strong> 里包含了一系列的类。命名空间包含了类 <em>Program</em>。</p></li><li><p>下一行是 <strong>class</strong> 声明。类 <em>Program</em> 包含了程序使用的数据和方法声明。类一般包含多个方法。方法定义了类的行为。在这里，<em>Program</em> 类只有一个 <strong>Main</strong> 方法。</p></li><li><p>下一行定义了 <strong>Main</strong> 方法，是所有 C# 程序的 <strong>入口点</strong>。<strong>Main</strong> 方法说明当执行时 类将做什么动作。</p></li><li><p>Main 方法通过语句<code>Console.WriteLine(&quot;Hello World!&quot;);</code> 指定了它的行为。</p><p><em>WriteLine</em> 是一个定义在 <em>System</em> 命名空间中的 <em>Console</em> 类的一个方法。该语句会在屏幕上显示消息 “Hello World!”。</p></li><li><p>最后一行 <strong><code>Console.ReadKey();</code></strong> 是针对 VS.NET 用户的。这使得程序会等待一个按键的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。</p></li></ul></blockquote><p>大家可能会觉得，这样比在 <code>python</code> 中输出 <code>&quot;hello world&quot;</code> 要繁琐很多，这样的设计看似没有必要，但实际上在大型的项目里能展现出它的优势<a href="%E8%BF%99%E6%A0%B7%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%98%AF%E5%9F%BA%E4%BA%8E%E4%B8%80%E7%A7%8D%E5%8F%AB%E5%81%9A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1(OOP)%E7%9A%84%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%EF%BC%8CC#%E5%92%8CJava%E9%83%BD%E6%98%AF%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%EF%BC%8Cpyhton%E4%B9%9F%E6%94%AF%E6%8C%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1">^3</a></p><p>简单的来说，命名空间包含类，类包含方法。</p><p>大家目前只需要注意一下 <code>Program</code> 类和 <code>Main</code> 方法。<br>在 <code>C#</code> 中方法的概念与其他语言中函数的意思区别不大，大家可以理解成函数。<br>而类的真正概念我们会在以后再讲。</p><p> <code>Main</code> 方法被包含在 <code>Program</code> 类中，而我们的程序总会从 <code>Main</code> 方法开始执行。</p><p> 在语句 <code>Console.WriteLine(&quot;Hello World!&quot;);</code> 中, <code>Console</code>也是一个类，而 <code>WriteLine()</code> 则为 <code>Console</code> 类中的一个方法，中间的 <code>.</code> 表示访问 <code>Console</code> 类中的成员<a href="%E5%85%B6%E5%AD%A6%E5%90%8D%E4%B8%BA%E6%88%90%E5%91%98%E8%AE%BF%E9%97%AE%E8%BF%90%E7%AE%97%E7%AC%A6">^4</a>，此处访问的即为该类中的<code>WriteLine()</code> 方法。</p><p>大家可以注意到一个有意思的现象，我们的 <code>Main</code> 方法也是被包含在一个类中的。事实上，在 <code>C#</code> 中方法的声明一定在一个类的内部。</p><p>因为我们目前只看主函数部分，所以以后会将上面那段代码写成如下的形式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 输出语句</span></span><br></pre></td></tr></table></figure><p>事实上，这样类似 <code>python</code> 的代码是 <code>.net5.0</code> 中的新特性：顶级语句。这样的程序在 <code>.net5.0运行时</code> 是可以通过编译并正常运行的。</p><hr><p>本文作者: jiangdu</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;C#是微软推出的一种基于.NET框架的、面向对象的高级编程语言。C#是一种由C和C++派生出来的面向对象的编程语言</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>电子电路社纳新</title>
    <link href="https://satorimarch.github.io/2021/11/20/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE%E7%BA%B3%E6%96%B0/"/>
    <id>https://satorimarch.github.io/2021/11/20/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE%E7%BA%B3%E6%96%B0/</id>
    <published>2021-11-19T16:00:00.000Z</published>
    <updated>2021-11-28T05:19:43.421Z</updated>
    
    <content type="html"><![CDATA[<p>周二下午没事做？<br>不如来 电子电路社 <strong><code>敲 代 码</code></strong> ！</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;快来电子电路社!\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>我和我身边的朋友都在做，<br><del>每天收入0元</del></p><p>虽然受不可抗力因素影响（？），<br>社团里可能<del>既没有电子也没有电路还没有社</del>，<br>但我们<del>温柔贤惠</del>的社长将会带领大家一起学习 <code>C#</code> ,<code>python</code> 等热门编程语言，<br>走入信息世界的大门。</p><p>不管您是对编程充满好奇的萌新，<br><del>还是随手AK IOI的大佬</del>，<br>电子电路社都欢迎您的到来。<br>每周二下午4点，<br><del>是兄弟就来找我（？）</del> <a href="%E6%96%87%E6%A1%88%E4%BD%9C%E8%80%85%E4%B8%BA%E5%89%AF%E7%A4%BE%E9%95%BFzzm">^1</a></p><h2 id=""><a href="#" class="headerlink" title=""></a><mark class="hl-label red">翻译：社团要没人了，救救孩子！（</mark> </h2><h4 id="报名方式："><a href="#报名方式：" class="headerlink" title="报名方式："></a>报名方式：</h4><p><a href="https://www.wjx.top/vm/OYzPatv.aspx">报名链接</a>（选开发部电子电路社）</p><p>社团微信群：（如果图片崩了请加QQ群或者社长微信）</p><p><img src="https://s6.jpg.cm/2021/11/20/IM01LC.jpg" alt="微信群"></p><p>QQ群: 942591414</p><p>社长微信号: jdu1234567</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;周二下午没事做？&lt;br&gt;不如来 电子电路社 &lt;strong&gt;&lt;code&gt;敲 代 码&lt;/code&gt;&lt;/strong&gt; ！&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C#教程[3] 数据类型转换</title>
    <link href="https://satorimarch.github.io/2021/08/19/c-sharp%E6%95%99%E7%A8%8B[3]%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>https://satorimarch.github.io/2021/08/19/c-sharp%E6%95%99%E7%A8%8B[3]%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-08-18T16:00:00.000Z</published>
    <updated>2021-11-27T17:32:33.581Z</updated>
    
    <content type="html"><![CDATA[<p>C# 是一门强类型语言，对类型的要求很严格，类型转换的方式有两种：<strong>隐式类型转换</strong>和<strong>显式类型转换</strong>。</p><h1 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">double</span> b = <span class="number">1.5</span>;</span><br><span class="line"><span class="built_in">double</span> c = a + b;</span><br><span class="line">System.Console.WriteLine(c);</span><br></pre></td></tr></table></figure><p>像这样，并没有对源代码进行任何特殊处理，而是由编译器自动进行了从<code>int</code>类型到<code>double</code>类型的隐式转换。</p><p>但是很多类型之间不可以进行隐式类型转换，可以看下面的例子。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> a = <span class="number">1.5</span>;</span><br><span class="line"><span class="built_in">int</span> b = a;</span><br><span class="line">System.Console.WriteLine(b);</span><br></pre></td></tr></table></figure><p>在作者的电脑上编译时会有这样的报错：</p><blockquote><p>错误    CS0266    无法将类型“double”隐式转换为“int”</p></blockquote><p>因此，我们需要用显式类型转换改正它。</p><h1 id="显式类型转换"><a href="#显式类型转换" class="headerlink" title="显式类型转换"></a>显式类型转换</h1><p>上面的例子的第二行应改为这样：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> b = (<span class="built_in">int</span>)a;</span><br></pre></td></tr></table></figure><p>语法就是在要转换的变量前加一组小括号，里面写要转换成的类型名。所有的隐式类型转换都可以写成显式。</p><p>但是这样写输出的结果却是<code>1</code>而非想象中的四舍五入<code>2</code>。</p><p>用显式类型转换<strong>会丢失数据的精度</strong>，这也是为什么编译器不会自动进行显式类型转换。显式类型转换又叫强制类型转换。</p><p>而且显式类型转换也并非所有类型之间都能转的，例如下面这么写也是<strong>错误</strong>的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> a = (<span class="built_in">double</span>)<span class="string">&quot;5.5&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>在许多其他编程语言里，<code>int</code>可以隐式转换为<code>bool</code>，但是C# 中无论是隐式还是显式都会报错，要使用后面提到的<code>Convert.ToBoolean()</code></p><p>为了解决上述的问题，我们将介绍使用方法进行类型转换。</p><h1 id="使用方法进行类型转换"><a href="#使用方法进行类型转换" class="headerlink" title="使用方法进行类型转换"></a>使用方法进行类型转换</h1><h2 id="使用ToString-方法"><a href="#使用ToString-方法" class="headerlink" title="使用ToString()方法"></a>使用<code>ToString()</code>方法</h2><p>所有的类型都可以使用<code>ToString()</code>方法，如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">string</span> b = a.ToString();</span><br></pre></td></tr></table></figure><h2 id="使用Convert-ToInt32-方法"><a href="#使用Convert-ToInt32-方法" class="headerlink" title="使用Convert.ToInt32()方法"></a>使用<code>Convert.ToInt32()</code>方法</h2><p><code>Convert</code>为类名，<code>ToInt32()</code>为其中的方法名。<code>Convert</code>类提供了许多转换的方法，例如：<code>ToChar()</code>，<code>ToDouble()</code>，<code>ToBoolean()</code></p><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = Convert.ToInt32(<span class="string">&quot;5.0&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="使用int-Parse-方法"><a href="#使用int-Parse-方法" class="headerlink" title="使用int.Parse()方法"></a>使用<code>int.Parse()</code>方法</h2><p><code>Parse()</code>方法用来将<strong>字符串</strong>转换为其他的类型</p><h3 id="注意：Parse-方法的参数只能是字符串"><a href="#注意：Parse-方法的参数只能是字符串" class="headerlink" title="注意：Parse()方法的参数只能是字符串"></a>注意：<code>Parse()</code>方法的参数只能是字符串</h3><p>使用时 <code>类型名.Parse(需要转换的变量);</code>  即可</p><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;5&quot;</span>;</span><br><span class="line"><span class="built_in">int</span> b = <span class="built_in">int</span>.Parse(a);</span><br></pre></td></tr></table></figure><p>虽然例子中用的是<code>int</code>类型，但实际上所有数字类型都有类似的方法。</p><p>但是将字符串<code>&quot;apple&quot;</code>转换为int时还是会报错导致程序无法继续运行，且我们也并不真的希望他把<code>apple</code>转为<code>int</code>类型，这时我们可以使用<code>TryParse()</code>方法。</p><h2 id="使用-int-TryParse-等方法"><a href="#使用-int-TryParse-等方法" class="headerlink" title="使用 int.TryParse()等方法"></a>使用 <code>int.TryParse()</code>等方法</h2><p>微软官方教程中的说明如下：</p><blockquote><p><code>TryParse()</code> 方法可同时执行多项操作：</p><ol><li><p>它会<strong>尝试</strong>将字符串分析成给定的数字数据类型。</p></li><li><p>如果成功，它会将转换后的值存储在 <strong>out 参数</strong>中。</p></li><li><p>它会<strong>返回布尔值</strong>来指示操作是否成功。</p></li></ol><p>对于<strong>所有数字数据类型</strong>，均可使用类似的 <code>TryParse()</code> 方法。</p></blockquote><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> result;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">&quot;5.5&quot;</span>;</span><br><span class="line"><span class="built_in">bool</span> a = <span class="built_in">double</span>.TryParse(str, <span class="keyword">out</span> result); <span class="comment">// result 即为说明中第2条的 &quot;out参数&quot; </span></span><br><span class="line">System.Console.WriteLine(<span class="string">$&quot;a = <span class="subst">&#123;a&#125;</span>\nresult = <span class="subst">&#123;result&#125;</span>\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>此时，输出结果应为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = True</span><br><span class="line">result = <span class="number">5.5</span></span><br></pre></td></tr></table></figure><h2 id="例题：（来自微软官方文档-链接）"><a href="#例题：（来自微软官方文档-链接）" class="headerlink" title="例题：（来自微软官方文档 链接）"></a>例题：（来自微软官方文档 <a href="https://docs.microsoft.com/zh-cn/learn/modules/csharp-convert-cast/4-challenge">链接</a>）</h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>已知一个字符串数组<code>values</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br></pre></td></tr></table></figure><p>循环访问字符串数组中的每个值， 对于每个值满足以下规则：</p><p>规则 1：如果值是字母，则连接它以形成消息</p><p>规则 2：如果值是数字，则将其加到总计值</p><h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Message: ABCDEF</span><br><span class="line">Total: <span class="number">68.3</span></span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码:"></a>示例代码:</h3><p>官方:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">decimal</span> total = <span class="number">0</span>m;</span><br><span class="line"><span class="built_in">string</span> message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> <span class="keyword">value</span> <span class="keyword">in</span> values)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">decimal</span> number;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">decimal</span>.TryParse(<span class="keyword">value</span>, <span class="keyword">out</span> number))</span><br><span class="line">    &#123;</span><br><span class="line">        total += number;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        message += <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Message: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Total: <span class="subst">&#123;total&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>作者的版本:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">decimal</span> total = <span class="number">0.0</span>m;</span><br><span class="line"><span class="built_in">string</span> message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> v <span class="keyword">in</span> values)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">decimal</span>.TryParse(v, <span class="keyword">out</span> <span class="built_in">decimal</span> curr)) total += curr; <span class="comment">// 这样写curr变量只会在if语句的范围内生效</span></span><br><span class="line">    <span class="keyword">else</span> message += v; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Messagae: <span class="subst">&#123;message&#125;</span>\nTotal: <span class="subst">&#123;total&#125;</span>\n&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他注意事项："><a href="#其他注意事项：" class="headerlink" title="其他注意事项："></a>其他注意事项：</h2><p>试图将字符串<code>&quot;5.5&quot;</code>转换成<code>int</code>类型时，下面两种方法都是<strong>错误</strong>的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = Convert.ToInt32(<span class="string">&quot;5.5&quot;</span>);</span><br><span class="line"><span class="built_in">int</span> a = <span class="built_in">int</span>.Parse(<span class="string">&quot;5.5&quot;</span>);</span><br></pre></td></tr></table></figure><p>正确的做法应该是先<strong>把字符串<code>&quot;5.5&quot;</code>先转换成<code>double</code>类型，再转换成<code>int</code>类型</strong>，比如下面两种方法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = (<span class="built_in">int</span>)Convert.ToDouble(<span class="string">&quot;5.5&quot;</span>);</span><br><span class="line"><span class="built_in">int</span> a = (<span class="built_in">int</span>)Double.Parse(<span class="string">&quot;5.5&quot;</span>);</span><br></pre></td></tr></table></figure><p>作者: jiangdu（另一常用网名: satori_march）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C# 是一门强类型语言，对类型的要求很严格，类型转换的方式有两种：&lt;strong&gt;隐式类型转换&lt;/strong&gt;和&lt;strong&gt;显式类型转换&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;隐式类型转换&quot;&gt;&lt;a href=&quot;#隐式类型转换&quot; class=&quot;headerlink</summary>
      
    
    
    
    
  </entry>
  
</feed>
