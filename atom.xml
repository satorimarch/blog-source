<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jiangdu的博客</title>
  
  <subtitle>jiangdu&#39;s blog</subtitle>
  <link href="https://satorimarch.github.io/atom.xml" rel="self"/>
  
  <link href="https://satorimarch.github.io/"/>
  <updated>2021-11-28T09:57:14.865Z</updated>
  <id>https://satorimarch.github.io/</id>
  
  <author>
    <name>jiangdu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="https://satorimarch.github.io/2021/11/28/test/"/>
    <id>https://satorimarch.github.io/2021/11/28/test/</id>
    <published>2021-11-27T16:00:00.000Z</published>
    <updated>2021-11-28T09:57:14.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><blockquote><p>提示块标签</p><blockquote><p>嵌套提示块</p></blockquote></blockquote><ul><li>无序列表1</li><li>无序列表2</li></ul><ol><li>有序列表1</li><li>有序列表2</li></ol><p><strong>加粗</strong>，<em>斜体</em>，<del>删除线</del>，<u>下划线</u>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">F=ma</script><script type="math/tex; mode=display">\sum_{i=0}^{n}a_i</script><p>试试行内公式: $f ^ { \prime } ( x ) = 2 x ^ { 2 }$</p><p><sup><a href="#fn_这是脚注" id="reffn_这是脚注">这是脚注</a></sup></p><p>这也是脚注<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><hr><blockquote><p>以下部分的<a href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">详细使用方法</a></p></blockquote><mark class="hl-label red">这是红色</mark> <mark class="hl-label pink">这是粉色</mark> <mark class="hl-label orange">这是橙色</mark> <mark class="hl-label yellow">这是黄色</mark> <mark class="hl-label blue">这是蓝色</mark> <mark class="hl-label green">这是绿色</mark> <mark class="hl-label purple">这是紫色</mark> <mark class="hl-label default">这是灰色</mark> <hr><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><hr><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><a class="btn-beautify button--animated larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated blue larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated pink larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated red larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated purple larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated orange larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify button--animated green larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><hr><blockquote><p>以下部分修改自这个人的 <code>typora</code> 主题的<a href="https://typora-dyzj-theme.vercel.app/#ref-footnote-1">demo</a></p></blockquote><p><kbd>ctrl</kbd>键</p><p>可以通过设置 <code>background-color</code>属性控制背景色，如：<code>&lt;font style=&quot;background-color:#8bc34a&quot;&gt;</code>绿色小标签<code>&lt;/font&gt;</code></p><div alt="three-table"> <!--alt还可取值为"notitle-table"，一种无表头的小型表格--><table>  <tr>    <th alt="left">标题1</th>    <th alt="center">标题2</th>    <th alt="right">标题3</th>  </tr>  <tr>    <td alt="left">居左：alt="left"</td>    <td alt="center">居中：alt="center"</td>    <td alt="right">居右：alt="right"</td>  </tr>  <tr>    <td alt="left">x</td>    <td alt="center">y</td>    <td alt="right">z</td>  </tr></table></div><div alt="fig">表1.    三线表</div><p><a href="#二级标题">跳转</a>至指定标题（锚点），也可以在任意位置通过 <code>&lt;a name=&quot;锚点名&quot; alt=&quot;none&quot;&gt; &lt;/a&gt;</code>（为了方便编辑，typora会显示空标签或 <code>style=&quot;display:none&quot;</code>的标签，但填充一个空格就可以被隐藏，在导出为HTML文件时，由于该款超链接样式有一个padding宽度，所以空链接还是会显示下划线，<code>alt=&quot;none&quot;</code>用于避免该问题，如果自定义的锚点有文字说明，则不要使用 <code>alt=&quot;none&quot;</code>）设定锚点，示例：<a href="#star">求点个赞呗</a></p><p><a href="#" alt="null">无样式链接</a>，主要用于图片超链接，如：<a href="#" alt="null"><img src="https://img.shields.io/badge/-GitHub-181717?style=flat-square&logo=github"><img src="https://img.shields.io/badge/-Git-F05032?style=flat-square&logo=git&logoColor=white"></a></p><p><ruby>Base<rp> (</rp><rt>top</rt><rp>) </rp></ruby>、<ruby>佐天泪子<rp> (</rp><rt>xiān qún kuáng mó</rt><rp>) </rp></ruby>、<ruby>超電磁砲<rp> (</rp><rt>レールガン</rt><rp>) </rp></ruby></p><audio controls="controls">  <source src="/music/parsley.mp3" type="audio/mp3" /></audio><blockquote><p>可以将 <code>&lt;audio&gt;</code>音频包裹在 <code>&lt;center&gt;&lt;/center&gt;</code>中居中显示</p></blockquote><p>插入网易云的外链播放器（<code>&lt;iframe&gt;</code>，可嵌入油管等平台视频）：</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="https://music.163.com/outchain/player?type=2&id=1836421270&auto=1&height=66"></iframe><p><details>    <summary>折叠标签</summary>    青青子衿，悠悠我心</details></p><blockquote><p>关于Typora对HTML的支持说明：<a href="https://support.typora.io/HTML/">https://support.typora.io/HTML/</a></p></blockquote><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">Emoji表情符号</a>：😄（<code>:smile:</code>），Decimal NCRs或Hexadecimal NCRs^[2]^编码也是受支持的，譬如“笑哭”：&#128514;（<code>&amp;#128514;</code>）或&#x1F602;（<code>&amp;#x1F602;</code>）</p><center><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" height="400px" viewBox="-0.5 -0.5 1071 773" content="<mxfile host="app.diagrams.net" modified="2021-11-15T07:08:52.373Z" agent="5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36" etag="aOnjZZMrixLFimZz001-" version="15.7.3" type="google"><diagram id="07fea595-8f29-1299-0266-81d95cde20df" name="Page-1">7Zpdk5o8FMc/jZfrkDeEy3Xdtjed6cx25rnOIylmisbGuGI/fQMEAZN1sY2uW+qNchKS8P9xPOcERuhhmX+UdL34LBKWjWCQ5CM0G0F4F4NQfxWWvbGEpDKkkieVCTSGJ/6TGWNgrFuesE2noxIiU3zdNc7FasXmqmOjUopdt9s3kXVnXdOUWYanOc1s6388UQtjBWHcNHxiPF2YqSM4qRr+p/PvqRTblZlvJVasalnSehhzjZsFTcSuZUKPI/QghVDVr2X+wLJC1lqx6rwPL7QelizZSvU5YQJRdcozzbbmus3K1L4WYrfgij2t6bw43mnYIzT9xrPsQWRCll0QgPf3U6LtqaQJ15PXbeW1N+YZlxoVFyvdxOhGr3G6UVJ8Z0f9F2qZ6SNQzCSa0fRMEGFM9Oqn9qWaq39mUrG8ZTKX/pGJJVNyr7uYVojjydjclOYmBTjEYxI0HyPHrnUH1PAWLfgAGSM1d116mK2RX/8wBF6igYdMI7RpEIxr02sESDAO2tyQDx5kyDwih3fEvXmAwItHhAMmgAIHAdifwMQLgcnrBFiiI6c5fFWhyj8PytaxFVlat/u+qGYx9Ukt2yoFp+5TyTKq+HM3+rukM3N8EVyvpRVMkP331bhLPdBGbOWcmXPbkbnHcABYwykqU6as4UqqBxF6go68uNqHIJoE787VXKkAQm+ZCsReaDxGJMTwb6ABgy6Nvn+CXmjUgwzTNxyJGYrwGMfNJ+pJg8TjuH2ajywNAS9w3qmruOCQ3jmCH++AQ/YOR5pcRo6eHhF6IeCnjH+nLuAgAPq7AIi8EOhRuv9Lk72nyQiRPsN5TJORvSfwhUqqh2CyXNcxdX0Xlw6iPY+v0q9C+93sjtjszQ4oiOpjM0TBdV2svLwWMh2R2Uv+5sGZEAptQSPocKbIcZdAL65k1/w56C8rzXha/DHNtQgaCZoWF8/nNLs3DUueJMUolsongFwPgCv3JXF43YBu1/y5/Xf21xJwbURem4BdjOdoOAQcEf3qBPwU4O905xFaYTV2bv0i0tl1BwC7cHR35usdxT/Cg4dckZd42uX3ESrSLc7jG8I25Frd5VXAk1cd+vwZHruS/7pfM205IwFriWmHjHZQIb5ktaJFDOLOZiGwJL5Y9ortUtxIeEYGdQsSkreT0K6ljYRnpEC3IGH8dhKerlL3v6XjuVWqh0QQ2YlgEJFrVqPYrkb3t1aN+qg6A3Is9OuvwiDXRhHsbvFPvKQNdkG6v7WC9DIQ3FvJ1xPerkP3t1aHXkb48nnjGwrvKj/DTBk9OvqHP7aibrjblErdF8EyWOdlbKvb9a+0+J5xqhPkpe6iuNJjmHH1mqqhq14Xo1yhRMERdXA6aPugbG09R87HBBFwUMbEA1Uy6KrV8ToTmpzxgp8PAIOuPx0AYNj/QRnwQsAuMXN8YxHlgo9XHAguu7OpD5v3yasHXs37+ujxFw==</diagram></mxfile>" onclick="(function(svg){var src=window.event.target||window.event.srcElement;while (src!=null&&src.nodeName.toLowerCase()!='a'){src=src.parentNode;}if(src==null){if(svg.wnd!=null&&!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data=='ready'&&evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute('content')),'*');window.removeEventListener('message',r);}};window.addEventListener('message',r);svg.wnd=window.open('https://viewer.diagrams.net/?client=1&page=0&edit=_blank');}}})(this);" style="cursor:pointer;max-width:100%;max-height:773px;"><defs/><g><rect x="100.5" y="610.5" width="120" height="130" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="300.5" y="690.5" width="120" height="50" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="500.5" y="640.5" width="120" height="100" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="700.5" y="570.5" width="120" height="170" fill="#12aab5" stroke="none" pointer-events="all"/><path d="M 40.5 740.5 L 40.5 270.6" fill="none" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 40.5 263.85 L 45 272.85 L 40.5 270.6 L 36 272.85 Z" fill="#000000" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/><rect x="100.5" y="480.5" width="120" height="130" fill="#f08705" stroke="none" pointer-events="all"/><rect x="100.5" y="350.5" width="120" height="130" fill="#e85642" stroke="none" pointer-events="all"/><rect x="300.5" y="530.5" width="120" height="160" fill="#f08705" stroke="none" pointer-events="all"/><rect x="300.5" y="500.5" width="120" height="30" fill="#e85642" stroke="none" pointer-events="all"/><rect x="500.5" y="480.5" width="120" height="160" fill="#f08705" stroke="none" pointer-events="all"/><rect x="500.5" y="300.5" width="120" height="180" fill="#e85642" stroke="none" pointer-events="all"/><path d="M 40.5 740.5 L 950.4 740.5" fill="none" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 957.15 740.5 L 948.15 745 L 950.4 740.5 L 948.15 736 Z" fill="#000000" stroke="#000000" stroke-width="3" stroke-miterlimit="10" pointer-events="all"/><rect x="970.5" y="728.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 731px; margin-left: 973px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Parameter x</div></div></div></foreignObject><text x="973" y="749" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px">Parameter...</text></switch></g><rect x="100.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 161px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x1</div></div></div></foreignObject><text x="161" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x1</text></switch></g><rect x="300.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 361px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x2</div></div></div></foreignObject><text x="361" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x2</text></switch></g><rect x="500.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 561px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x3</div></div></div></foreignObject><text x="561" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x3</text></switch></g><rect x="860.5" y="140.5" width="35" height="30" fill="#12aab5" stroke="none" pointer-events="all"/><rect x="860.5" y="100.5" width="35" height="30" fill="#f08705" stroke="none" pointer-events="all"/><rect x="860.5" y="60.5" width="35" height="30" fill="#e85642" stroke="none" pointer-events="all"/><rect x="900.5" y="65.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 68px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 1</div></div></div></foreignObject><text x="903" y="83" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 1</text></switch></g><rect x="900.5" y="105.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 108px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 2</div></div></div></foreignObject><text x="903" y="123" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 2</text></switch></g><rect x="900.5" y="145.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 148px; margin-left: 903px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 15px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Type 3</div></div></div></foreignObject><text x="903" y="163" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="15px">Type 3</text></switch></g><rect x="0.5" y="231.5" width="80" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 234px; margin-left: 3px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">Parameter y</div></div></div></foreignObject><text x="3" y="252" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px">Parameter...</text></switch></g><rect x="8.5" y="610.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 673px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y1</div></div></div></foreignObject><text x="24" y="678" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y1</text></switch></g><rect x="8.5" y="480.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 543px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y2</div></div></div></foreignObject><text x="24" y="548" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y2</text></switch></g><rect x="8.5" y="350.5" width="30" height="130" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 413px; margin-left: 24px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">y3</div></div></div></foreignObject><text x="24" y="418" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">y3</text></switch></g><rect x="40.5" y="0.5" width="810" height="45" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 21px; margin-left: 446px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 30px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: nowrap;"><font style="font-size: 30px">Diagram title</font></div></div></div></foreignObject><text x="446" y="30" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="30px" text-anchor="middle" font-weight="bold">Diagram title</text></switch></g><rect x="700.5" y="520.5" width="120" height="50" fill="#f08705" stroke="none" pointer-events="all"/><rect x="700.5" y="410.5" width="120" height="110" fill="#e85642" stroke="none" pointer-events="all"/><rect x="700.5" y="742.5" width="120" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 755px; margin-left: 761px;"><div data-drawio-colors="color: rgba(0, 0, 0, 1); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">x4</div></div></div></foreignObject><text x="761" y="760" fill="rgba(0, 0, 0, 1)" font-family="Helvetica" font-size="18px" text-anchor="middle">x4</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg></center><div alt="fig">图2.    柱状图</div><p><a href="https://app.diagrams.net/?src=about#G1XbVy9iD3kEJMiCqG2IceUlNBIzMbcJYS">在线编辑地址</a>，该图表由<a href="https://www.diagrams.net/">drawio</a>提供支持（提供iframe嵌入代码和svg嵌入代码），还支持UML类图、Network网络拓扑图、Flowcharts流程图、Tables表格等众多图表类型</p><hr><blockquote id="fn_1"><sup>1</sup>. 这是脚注1<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_这是脚注"><sup>这是脚注</sup>. 我是一个脚注<a href="#reffn_这是脚注" title="Jump back to footnote [这是脚注] in the text."> &#8617;</a></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>C#教程[1] 简介</title>
    <link href="https://satorimarch.github.io/2021/11/23/c-sharp%E6%95%99%E7%A8%8B[1]%E7%AE%80%E4%BB%8B/"/>
    <id>https://satorimarch.github.io/2021/11/23/c-sharp%E6%95%99%E7%A8%8B[1]%E7%AE%80%E4%BB%8B/</id>
    <published>2021-11-22T16:00:00.000Z</published>
    <updated>2021-11-28T10:28:48.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本系列教程是为了我在学校社团课使用而随手写的，因此可能有很多随意或不严谨的地方，而且随时有可能停更，请见谅。<br>因为高一学校的信息课学习 <code>pyhton</code>，因此默认读者有微弱的 <code>pyhton</code> 基础，故基础语法可能会讲的稍微快一些而且会与 <code>pyhton</code> 的语法进行比较。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>C#是微软推出的一种基于.NET框架的、面向对象的高级编程语言。C#是一种由C和C++派生出来的面向对象的编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性，使其成为C语言家族中的一种高效强大的编程语言。C#以.NET框架类库作为基础，拥有类似Visual Basic的快速开发能力。C#由安德斯·海尔斯伯格主持开发，微软在2000年发布了这种语言，希望借助这种语言来取代Java。<sup><a href="#fn_1" id="reffn_1">1</a></sup></p></blockquote><h1 id="第一个C-程序"><a href="#第一个C-程序" class="headerlink" title="第一个C#程序"></a>第一个C#程序</h1><p>大家先来看一个在VS2019里新建C#控制台应用生成的默认程序（代码中的 <code>//</code> 表示单行注释）：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApp</span> <span class="comment">// ConsoleApp为命名空间(namespace)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span> <span class="comment">// Program是一个&quot;类&quot;(class)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>) <span class="comment">// Main方法</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 输出语句</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面引用的内容大家扫一眼即可，我会在后面再进行说明。</p><blockquote><p>让我们看一下上面程序的各个部分：<sup><a href="#fn_2" id="reffn_2">2</a></sup></p><ul><li>程序的第一行 <strong>using System;</strong> - <strong>using</strong> 关键字用于在程序中包含 <strong>System</strong> 命名空间。 一个程序一般有多个 <strong>using</strong> 语句。</li><li>下一行是 <strong>namespace</strong> 声明。一个 <strong>namespace</strong> 里包含了一系列的类。命名空间包含了类 <em>Program</em>。</li><li>下一行是 <strong>class</strong> 声明。类 <em>Program</em> 包含了程序使用的数据和方法声明。类一般包含多个方法。方法定义了类的行为。在这里，<em>Program</em> 类只有一个 <strong>Main</strong> 方法。</li><li>下一行定义了 <strong>Main</strong> 方法，是所有 C# 程序的 <strong>入口点</strong>。<strong>Main</strong> 方法说明当执行时 类将做什么动作。</li><li>Main 方法通过语句<code>Console.WriteLine(&quot;Hello World!&quot;);</code> 指定了它的行为。<br><em>WriteLine</em> 是一个定义在 <em>System</em> 命名空间中的 <em>Console</em> 类的一个方法。该语句会在屏幕上显示消息 “Hello World!”。</li><li>最后一行 <strong><code>Console.ReadKey();</code></strong> 是针对 VS.NET 用户的。这使得程序会等待一个按键的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。</li></ul></blockquote><p>大家可能会觉得，这样比在 <code>python</code> 中输出 <code>&quot;hello world&quot;</code> 要繁琐很多，这样的设计看似没有必要，但实际上在大型的项目里能展现出它的优势<sup><a href="#fn_3" id="reffn_3">3</a></sup></p><p>简单的来说，命名空间包含类，类包含方法。</p><p>大家目前只需要注意一下 <code>Program</code> 类和 <code>Main</code> 方法。<br>在 <code>C#</code> 中方法的概念与其他语言中函数的意思区别不大，大家可以理解成函数。<br>而类的真正概念我们会在以后再讲。</p><p> <code>Main</code> 方法被包含在 <code>Program</code> 类中，而我们的程序总会从 <code>Main</code> 方法开始执行。</p><p> 在语句 <code>Console.WriteLine(&quot;Hello World!&quot;);</code> 中, <code>Console</code>也是一个类，而 <code>WriteLine()</code> 则为 <code>Console</code> 类中的一个方法，中间的 <code>.</code> 表示访问 <code>Console</code> 类中的成员<sup><a href="#fn_4" id="reffn_4">4</a></sup>，此处访问的即为该类中的<code>WriteLine()</code> 方法。</p><p>大家可以注意到一个有意思的现象，我们的 <code>Main</code> 方法也是被包含在一个类中的。事实上，在 <code>C#</code> 中方法的声明一定在一个类的内部。</p><p>因为我们目前只看主函数部分，所以以后会将上面那段代码写成如下的形式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Hello World!&quot;</span>); <span class="comment">// 输出语句</span></span><br></pre></td></tr></table></figure><p>事实上，这样类似 <code>python</code> 的代码是 <code>.net5.0</code> 中的新特性：顶级语句。这样的程序在 <code>.net5.0运行时</code> 是可以通过编译并正常运行的。</p><hr><blockquote id="fn_1"><sup>1</sup>. 来自<a href="https://zh.wikipedia.org/wiki/C%E2%99%AF">维基百科</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. 来自<a href="https://www.runoob.com/csharp/csharp-program-structure.html">菜鸟教程</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. 这样的设计是基于一种叫做面向对象(OOP)的编程思想，C#和Java都是面向对象的编程语言，pyhton也支持面向对象<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_4"><sup>4</sup>. 其学名为成员访问运算符<a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本系列教程是为了我在学校社团课使用而随手写的，因此可能有很多随意或不严谨的地方，而且随时有可能停更，请见谅。&lt;br&gt;因为高一学校的信息课学习</summary>
      
    
    
    
    <category term="电子电路社" scheme="https://satorimarch.github.io/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE/"/>
    
    <category term="c#教程" scheme="https://satorimarch.github.io/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE/c-%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="c#" scheme="https://satorimarch.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>电子电路社纳新</title>
    <link href="https://satorimarch.github.io/2021/11/20/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE%E7%BA%B3%E6%96%B0/"/>
    <id>https://satorimarch.github.io/2021/11/20/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE%E7%BA%B3%E6%96%B0/</id>
    <published>2021-11-19T16:00:00.000Z</published>
    <updated>2021-11-28T08:03:00.598Z</updated>
    
    <content type="html"><![CDATA[<p>周二下午没事做？<br>不如来 电子电路社 <strong><code>敲 代 码</code></strong> ！</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;快来电子电路社!\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>我和我身边的朋友都在做，<br><del>每天收入0元</del></p><p>虽然受不可抗力因素影响（？），<br>社团里可能<del>既没有电子也没有电路还没有社</del>，<br>但我们<del>温柔贤惠</del>的社长将会带领大家一起学习 <code>C#</code> ,<code>python</code> 等热门编程语言，<br>走入信息世界的大门。</p><p>不管您是对编程充满好奇的萌新，<br><del>还是随手AK IOI的大佬</del>，<br>电子电路社都欢迎您的到来。<br>每周二下午4点，<br><del>是兄弟就来找我（？）</del> <sup><a href="#fn_1" id="reffn_1">1</a></sup></p><h2 id=""><a href="#" class="headerlink" title=""></a><mark class="hl-label red">翻译：社团要没人了，救救孩子！（</mark> </h2><h4 id="报名方式："><a href="#报名方式：" class="headerlink" title="报名方式："></a>报名方式：</h4><p><a href="https://www.wjx.top/vm/OYzPatv.aspx">报名链接</a>（选开发部电子电路社）</p><p>社团微信群：（如果图片崩了请加QQ群或者社长微信）</p><p><img src="https://s6.jpg.cm/2021/11/20/IM01LC.jpg" alt="微信群"></p><p>QQ群: 942591414</p><p>社长微信号: jdu1234567</p><hr><blockquote id="fn_1"><sup>1</sup>. 文案作者为副社长zzm<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;周二下午没事做？&lt;br&gt;不如来 电子电路社 &lt;strong&gt;&lt;code&gt;敲 代 码&lt;/code&gt;&lt;/strong&gt; ！&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    <category term="电子电路社" scheme="https://satorimarch.github.io/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>[游记] NOIP 2021 游记</title>
    <link href="https://satorimarch.github.io/2021/11/20/noip2021/"/>
    <id>https://satorimarch.github.io/2021/11/20/noip2021/</id>
    <published>2021-11-19T16:00:00.000Z</published>
    <updated>2021-11-28T08:27:41.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021-11-19-Day-1"><a href="#2021-11-19-Day-1" class="headerlink" title="2021-11-19 Day -1"></a>2021-11-19 Day -1</h1><p>18号看到教练在群里说天大因为防疫问题不能举办 <code>NOIP</code> , 如果找不到地点举办可能就取消了…</p><p>明天就是 <code>NOIP</code> 了, 回想起 <code>csp-s</code> 的 <em>“ 好 “</em> 成绩, 不禁害怕起来, 何况本来心情就乱七八糟的.</p><p>中午班主任换了位置, 和我关系很好的同桌和前桌分开了, 难受.</p><p>下午上完第二节课就请了假, 拿到手机后看到 <code>NOIP</code> 考点由天大变成了在郊区的英华国际学校, 估计得很早起床吧. 回家打了俩小时游戏. 最近一直过得很颓废, 期中考试更是一塌糊涂, <del>不像是智力正常的人考得出来的分数</del>. 晚上随便看了点动态规划和图论便带着乱哄哄的心情睡觉了.</p><hr><h1 id="2021-11-20-Day-0"><a href="#2021-11-20-Day-0" class="headerlink" title="2021-11-20 Day 0"></a>2021-11-20 Day 0</h1><p>因为开车到考点要一个小时多, <code>6:10</code> 就起床了. 在车上晃晃悠悠就过去了. 虽然最近一直睡的很少, 昨晚也就睡了 <code>6</code> 小时左右, 但却不怎么困. </p><p>到考点跟 <code>csp-s</code> 一样, 调完机器后先打了一个链式前向星和并查集 (<del>我也不知道为什么我要打并查集</del>) , 而且一样并没有用上.<br><del>有点紧张</del></p><h2 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h2><p>看到T1第一反应是打表. 花不少时间然后才暴力打了个表, 写到一半暴力不知道为什么调不对, 想起来埃氏筛, 然后又改成了埃氏筛. 我最开始还是输出的下一个<strong>不能</strong>输出的数字, 打完表才发现不能输出的数字比能输出的多(</p><p>看着若干 <code>MB</code> 的 <code>.out</code> 文件突然意识到, 是不是源代码有多少kb的要求来着…<br>然后看了两遍卷子, 都没有找到 <code>100kb</code> 要求, 因为<del>监考员的话不可信</del>所以没问, 我决定再想想别的办法(<br><del>(还好我曾经看到过这个要求, 不然我现在得担心半天我的T1代码超过大小要求会不会给分)</del></p><p>我除了埃氏筛和打表以外想不到别的做法, 但是用埃氏筛打表的程序却用时超过了 <code>1s</code> , 不能用来预处理. 我又思索了一会怎么办, 直到我注释掉了 <code>printf</code> 然后发现用时不到 <code>400ms</code>…</p><p>然后我就把数组的 <code>bool</code> 换成了 <code>int</code> , 用 <code>-1</code> 表示需要跳过这个数 (原来是用的 <code>true</code> ) , 然后直接 在处理到下一个可以报出的数字时把数组中上一个的值设为这个数字, 即:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(table[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">table[pre] = i;</span><br><span class="line">pre = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考场4个样例都过了, 感谢<del>良心</del>CCF的样例4, 不然我肯定忘了处理1e7+1</p><p>后来仔细一想, 我写的应该不会比埃氏筛 $O(n\log\log n)$ 的时间复杂度差太多, <code>1e7</code> 的数据显然很稳 (</p><p>用了不到一个半小时才写完T1, 我菜死了</p><h2 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h2><p>吸取了 <code>csp-s</code> 的经验, 等T1打表 (这时候还没写埃氏筛, 而且还写错了, 打的很慢) 的时候把 T2 T3 一起看了, <del>然后并没有什么卵用</del></p><p>T2照样没思路, 考虑了是不是DP, <del>但是发现我不会</del></p><p>于是决定按照样例1说明里的思路爆搜. 按递增顺序枚举 $ a_i $, 然后判断满不满足条件, 求组合数再乘以贡献, 最后加起来. 这堆代码调了好久, 调这题调了两个小时, 中间实现过程改来改去的, 看这堆乱七八糟的东西把我看吐了 (</p><p>玄学复杂度, 不知道怎么分析( </p><p>没想出来该怎么剪枝, 感觉会 <code>TLE</code> </p><h2 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h2><p>做T2之前先试着推了推贪心式子, 结果失败了 (</p><p>做完T2再看T3的时候只有半小时收卷了, 先研究了一下怎么求 $ D\times n^2 $ , 反正我大概就是把 $n^2$ 乘进去然后再乘一个 $ n $ , 变成这样: (其中sum为所有数的和)</p><script type="math/tex; mode=display">\frac{\sum_{i-1}^{n}(n\cdot a_i-sum)^2}{n}</script><p>然后就只有几分钟交卷, 没时间写爆搜了, 干脆自暴自弃枚举不替换和所有只换一次的情况取一个最小值, 估计拿不到几分(</p><h2 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h2><p>扫了一眼感觉好复杂, 而且还是T4 就直接放弃了, 所以根本没写(</p><hr><h2 id="赛后"><a href="#赛后" class="headerlink" title="赛后"></a>赛后</h2><p>考试时一点也不困, 考后还有回家路上也不困, 一到家就困了(?), 而且因为其他事情心情还是一如既往的差, <del>于是打开电脑开始玩 osu! mania</del></p><p>洛谷民间数据 $ 100+30+0+0=130pts $, 人没了(</p><p>T2只有 $n=5$ 和 $n=8$ 的测试点拿到了分,剩下的全都 <code>TLE</code> , 开 $O2$ 也一样. 本来考后以为T2能拿 <code>50pts</code> , 看来是我太乐观了, 不过我也没认真思考过数据范围, 这 <code>50pts</code> 是瞎估的, 不准很正常.</p><p>没想到T3竟然在洛谷连4分都没拿到, 希望CCF数据水一点(x)<br><del>不过在另外一个民间数据拿到了 <code>4pts</code></del></p><p>看网上感觉大家都觉得T1很水(虽说埃氏筛确实是很基础的东西), 大家都200+, wsl<br>估分最高 <code>134pts</code> , 无缘1=, 我菜死了(</p><p>通过这两次考试我发现我每次都会在T2写暴力浪费大量时间还没拿到多少分(<br>而且两次T2都是动态规划, <del>果然动态规划一生之敌</del><br>果然是因为学的时间比较短, <del>也没有停课</del>, 写的代码太少了吗(?)</p><p>听说T3的操作相当于差分数组中交换两个数, <del>好神奇, 感觉整个人都升华了(?)</del><br><del>然而听说了之后还是不知道怎么做</del></p><hr><p><img src="https://img2020.cnblogs.com/blog/2468718/202111/2468718-20211120205802365-1942073931.jpg" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2021-11-19-Day-1&quot;&gt;&lt;a href=&quot;#2021-11-19-Day-1&quot; class=&quot;headerlink&quot; title=&quot;2021-11-19 Day -1&quot;&gt;&lt;/a&gt;2021-11-19 Day -1&lt;/h1&gt;&lt;p&gt;18号看到教练在群里说天</summary>
      
    
    
    
    <category term="游记" scheme="https://satorimarch.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://satorimarch.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="OI" scheme="https://satorimarch.github.io/tags/OI/"/>
    
    <category term="noip" scheme="https://satorimarch.github.io/tags/noip/"/>
    
  </entry>
  
  <entry>
    <title>[游记] csp-s2021 蒟蒻爆零退役记</title>
    <link href="https://satorimarch.github.io/2021/10/23/csp-s2021/"/>
    <id>https://satorimarch.github.io/2021/10/23/csp-s2021/</id>
    <published>2021-10-22T16:00:00.000Z</published>
    <updated>2021-11-28T08:27:36.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021-10-23"><a href="#2021-10-23" class="headerlink" title="2021-10-23"></a>2021-10-23</h1><p>第一次<del>也是最后一次参加</del>CSP好紧张（？）</p><p>考试的地方键盘和桌面不在一个平面上, 也没地方伸展鼠标, 用起来好难受 (<br>调完机器然后打了一个快读和链式前向星(结果前向星也没用上)的模板就差不多开考了. </p><p>我T1思路和别人貌似都不太一样, 花了一个半小时写了个玄学做法才做完了T1, 还是 $O(n^2)$ 复杂度的 (虽然常数一般情况下很小). 三个样例都过了, 然后检查完了 <code>freopen</code> 什么的就放心的地看T2T3去了. T2T3都没啥思路 (我竟然没看出T2是DP啊啊啊, 明明考试前一天还在做区间DP的) , 于是写搜索骗分, 结果把自己陷进去了然后时间莫名其妙就快结束了（？？）</p><p>下次 (如果还有下次) 一定要注意管理一下时间.</p><p>结果考试结束前也没把T2调对, 样例都过不去, 样例2答案 32 我 33…<br>考完感觉虽然很惨, 但应该能进noip, 毕竟T1能拿至少一半多的分 (</p><p>然后回家拿民间数据一测…T1爆零 !!!</p><p>仔细看了看公示的代码, 发现算国内机场和国外机场的时候我代码是直接复制过去的, 后来改的时候只改了国内机场部分的代码, 国外机场没改 (少写一个 <code>break</code> ) 于是后面全错了… 三个样例都对了是最离谱的… 人傻了…</p><p>把第二个 <code>break</code> 加上后洛谷的民间数据就AC了… (虽然可能是因为民间数据比较弱, 真的加了第二个 <code>break</code> 估计也会有几个点TLE) </p><p>提醒大家一定要记得对拍, 至少要自己捏测试用例试试 (我考场怎么想的才没试啊) , 防止爆零… 还有, 不要信ccf的大样例(</p><p>以及一定要检查复制过去的代码有没有只改了一边的情况, 或者最好写成函数(?)</p><p>不要在一道题上死磕, 还不如去检查一下做出来的题, 或者把好写的暴力做了…</p><p>估分: 0+0+0+0</p><h1 id="AFO预定"><a href="#AFO预定" class="headerlink" title="AFO预定"></a>AFO预定</h1><hr><h1 id="2021-10-24更新"><a href="#2021-10-24更新" class="headerlink" title="2021-10-24更新"></a>2021-10-24更新</h1><p>昨天知道T1爆零之后心态直接爆炸了</p><p><del>我为什么连T3的暴力都没打, 为什么没去检查T1, 我为什么没有自己捏数据检查一下, 考试前还记得的, 一考试就忘记了, 为什么没有用debugger检查一下 <code>ans2</code> 数组内的值, 为什么那么相信他给的大样例, 为什么没有做完之后看一遍代码静态查错</del><br>(自责ing)</p><p><del>因为我tcl</del></p><p>也许还是第一次上机考试没有经验吧, 我本来就是那种一上考场就容易犯傻的人(</p><p>很可惜大概没法继续参加noip了, 明年升学更没有时间. 我为什么不早点学呢(<br>至少高一就可以开始学啊, 但当时觉得自己没有能力(<br>所以高一只在tw(我们班的信息老师) 的课上接触了点 <code>C++</code> 和 <code>python</code> , 后来自己接触了点 <code>C#</code> , 但是算法和数据结构却不敢碰, 连简单的二分都写不出来( 还是高二前的暑假才开始学的OI<br>其实自己还挺喜欢OI的<br>明年也许还会参加, 但没法准备了. 希望有缘ACM再见吧(?)</p><p>现在该去补补whk, 准备期中考试了(<br>(虽然本来也是打算考完csp-s就先不看OI, 准备期中考试的, 但是明明同样的事心情怎么完全不一样呢(?))</p><p>把那句OI名言送给大家, 和我自己(?):</p><blockquote><p>人生如此复杂，机会多得像稠密图，我们没理由认输。尽管我们走不了最短路，但图仍是连通图，TLE之前，没有一个节点叫失败。<sup><a href="#fn_1" id="reffn_1">1</a></sup></p></blockquote><hr><p>谨以此文纪念我的退役 (三个月的OIer生涯(?)) </p><p><img src="https://img2020.cnblogs.com/blog/2468718/202110/2468718-20211023224247624-327276269.jpg" alt=""></p><hr><h1 id="2021-10-30-更新"><a href="#2021-10-30-更新" class="headerlink" title="2021-10-30 更新"></a>2021-10-30 更新</h1><p>初评成绩出了, 没想到竟然没爆零(<br>T1拿了20分, 最离谱的是T3输出 <code>-1</code> 拿了8分(</p><hr><blockquote id="fn_1"><sup>1</sup>. 来源请求<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2021-10-23&quot;&gt;&lt;a href=&quot;#2021-10-23&quot; class=&quot;headerlink&quot; title=&quot;2021-10-23&quot;&gt;&lt;/a&gt;2021-10-23&lt;/h1&gt;&lt;p&gt;第一次&lt;del&gt;也是最后一次参加&lt;/del&gt;CSP好紧张（？）&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="游记" scheme="https://satorimarch.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://satorimarch.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="OI" scheme="https://satorimarch.github.io/tags/OI/"/>
    
    <category term="csp" scheme="https://satorimarch.github.io/tags/csp/"/>
    
  </entry>
  
  <entry>
    <title>C#教程[3] 数据类型转换</title>
    <link href="https://satorimarch.github.io/2021/08/19/c-sharp%E6%95%99%E7%A8%8B[3]%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    <id>https://satorimarch.github.io/2021/08/19/c-sharp%E6%95%99%E7%A8%8B[3]%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-08-18T16:00:00.000Z</published>
    <updated>2021-11-28T10:29:24.600Z</updated>
    
    <content type="html"><![CDATA[<p>C# 是一门强类型语言，对类型的要求很严格，类型转换的方式有两种：<strong>隐式类型转换</strong>和<strong>显式类型转换</strong>。</p><h1 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">double</span> b = <span class="number">1.5</span>;</span><br><span class="line"><span class="built_in">double</span> c = a + b;</span><br><span class="line">System.Console.WriteLine(c);</span><br></pre></td></tr></table></figure><p>像这样，并没有对源代码进行任何特殊处理，而是由编译器自动进行了从<code>int</code>类型到<code>double</code>类型的隐式转换。</p><p>但是很多类型之间不可以进行隐式类型转换，可以看下面的例子。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> a = <span class="number">1.5</span>;</span><br><span class="line"><span class="built_in">int</span> b = a;</span><br><span class="line">System.Console.WriteLine(b);</span><br></pre></td></tr></table></figure><p>在作者的电脑上编译时会有这样的报错：</p><blockquote><p>错误    CS0266    无法将类型“double”隐式转换为“int”</p></blockquote><p>因此，我们需要用显式类型转换改正它。</p><h1 id="显式类型转换"><a href="#显式类型转换" class="headerlink" title="显式类型转换"></a>显式类型转换</h1><p>上面的例子的第二行应改为这样：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> b = (<span class="built_in">int</span>)a;</span><br></pre></td></tr></table></figure><p>语法就是在要转换的变量前加一组小括号，里面写要转换成的类型名。所有的隐式类型转换都可以写成显式。</p><p>但是这样写输出的结果却是<code>1</code>而非想象中的四舍五入<code>2</code>。</p><p>用显式类型转换<strong>会丢失数据的精度</strong>，这也是为什么编译器不会自动进行显式类型转换。显式类型转换又叫强制类型转换。</p><p>而且显式类型转换也并非所有类型之间都能转的，例如下面这么写也是<strong>错误</strong>的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> a = (<span class="built_in">double</span>)<span class="string">&quot;5.5&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>在许多其他编程语言里，<code>int</code>可以隐式转换为<code>bool</code>，但是C# 中无论是隐式还是显式都会报错，要使用后面提到的<code>Convert.ToBoolean()</code></p><p>为了解决上述的问题，我们将介绍使用方法进行类型转换。</p><h1 id="使用方法进行类型转换"><a href="#使用方法进行类型转换" class="headerlink" title="使用方法进行类型转换"></a>使用方法进行类型转换</h1><h2 id="使用ToString-方法"><a href="#使用ToString-方法" class="headerlink" title="使用ToString()方法"></a>使用<code>ToString()</code>方法</h2><p>所有的类型都可以使用<code>ToString()</code>方法，如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">string</span> b = a.ToString();</span><br></pre></td></tr></table></figure><h2 id="使用Convert-ToInt32-方法"><a href="#使用Convert-ToInt32-方法" class="headerlink" title="使用Convert.ToInt32()方法"></a>使用<code>Convert.ToInt32()</code>方法</h2><p><code>Convert</code>为类名，<code>ToInt32()</code>为其中的方法名。<code>Convert</code>类提供了许多转换的方法，例如：<code>ToChar()</code>，<code>ToDouble()</code>，<code>ToBoolean()</code></p><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = Convert.ToInt32(<span class="string">&quot;5.0&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="使用int-Parse-方法"><a href="#使用int-Parse-方法" class="headerlink" title="使用int.Parse()方法"></a>使用<code>int.Parse()</code>方法</h2><p><code>Parse()</code>方法用来将<strong>字符串</strong>转换为其他的类型</p><h3 id="注意：Parse-方法的参数只能是字符串"><a href="#注意：Parse-方法的参数只能是字符串" class="headerlink" title="注意：Parse()方法的参数只能是字符串"></a>注意：<code>Parse()</code>方法的参数只能是字符串</h3><p>使用时 <code>类型名.Parse(需要转换的变量);</code>  即可</p><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;5&quot;</span>;</span><br><span class="line"><span class="built_in">int</span> b = <span class="built_in">int</span>.Parse(a);</span><br></pre></td></tr></table></figure><p>虽然例子中用的是<code>int</code>类型，但实际上所有数字类型都有类似的方法。</p><p>但是将字符串<code>&quot;apple&quot;</code>转换为int时还是会报错导致程序无法继续运行，且我们也并不真的希望他把<code>apple</code>转为<code>int</code>类型，这时我们可以使用<code>TryParse()</code>方法。</p><h2 id="使用-int-TryParse-等方法"><a href="#使用-int-TryParse-等方法" class="headerlink" title="使用 int.TryParse()等方法"></a>使用 <code>int.TryParse()</code>等方法</h2><p>微软官方教程中的说明如下：</p><blockquote><p><code>TryParse()</code> 方法可同时执行多项操作：</p><ol><li><p>它会<strong>尝试</strong>将字符串分析成给定的数字数据类型。</p></li><li><p>如果成功，它会将转换后的值存储在 <strong>out 参数</strong>中。</p></li><li><p>它会<strong>返回布尔值</strong>来指示操作是否成功。</p></li></ol><p>对于<strong>所有数字数据类型</strong>，均可使用类似的 <code>TryParse()</code> 方法。</p></blockquote><p>例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> result;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">&quot;5.5&quot;</span>;</span><br><span class="line"><span class="built_in">bool</span> a = <span class="built_in">double</span>.TryParse(str, <span class="keyword">out</span> result); <span class="comment">// result 即为说明中第2条的 &quot;out参数&quot; </span></span><br><span class="line">System.Console.WriteLine(<span class="string">$&quot;a = <span class="subst">&#123;a&#125;</span>\nresult = <span class="subst">&#123;result&#125;</span>\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>此时，输出结果应为：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = True</span><br><span class="line">result = <span class="number">5.5</span></span><br></pre></td></tr></table></figure><h2 id="例题：（来自微软官方文档-链接）"><a href="#例题：（来自微软官方文档-链接）" class="headerlink" title="例题：（来自微软官方文档 链接）"></a>例题：（来自微软官方文档 <a href="https://docs.microsoft.com/zh-cn/learn/modules/csharp-convert-cast/4-challenge">链接</a>）</h2><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>已知一个字符串数组<code>values</code></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br></pre></td></tr></table></figure><p>循环访问字符串数组中的每个值， 对于每个值满足以下规则：</p><p>规则 1：如果值是字母，则连接它以形成消息</p><p>规则 2：如果值是数字，则将其加到总计值</p><h3 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Message: ABCDEF</span><br><span class="line">Total: <span class="number">68.3</span></span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码:"></a>示例代码:</h3><p>官方:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">decimal</span> total = <span class="number">0</span>m;</span><br><span class="line"><span class="built_in">string</span> message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> <span class="keyword">value</span> <span class="keyword">in</span> values)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">decimal</span> number;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">decimal</span>.TryParse(<span class="keyword">value</span>, <span class="keyword">out</span> number))</span><br><span class="line">    &#123;</span><br><span class="line">        total += number;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        message += <span class="keyword">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Message: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Total: <span class="subst">&#123;total&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>作者的版本:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span>[] values = &#123; <span class="string">&quot;12.3&quot;</span>, <span class="string">&quot;45&quot;</span>, <span class="string">&quot;ABC&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;DEF&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">decimal</span> total = <span class="number">0.0</span>m;</span><br><span class="line"><span class="built_in">string</span> message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> v <span class="keyword">in</span> values)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">decimal</span>.TryParse(v, <span class="keyword">out</span> <span class="built_in">decimal</span> curr)) total += curr; <span class="comment">// 这样写curr变量只会在if语句的范围内生效</span></span><br><span class="line">    <span class="keyword">else</span> message += v; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">$&quot;Messagae: <span class="subst">&#123;message&#125;</span>\nTotal: <span class="subst">&#123;total&#125;</span>\n&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他注意事项："><a href="#其他注意事项：" class="headerlink" title="其他注意事项："></a>其他注意事项：</h2><p>试图将字符串<code>&quot;5.5&quot;</code>转换成<code>int</code>类型时，下面两种方法都是<strong>错误</strong>的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = Convert.ToInt32(<span class="string">&quot;5.5&quot;</span>);</span><br><span class="line"><span class="built_in">int</span> a = <span class="built_in">int</span>.Parse(<span class="string">&quot;5.5&quot;</span>);</span><br></pre></td></tr></table></figure><p>正确的做法应该是先<strong>把字符串<code>&quot;5.5&quot;</code>先转换成<code>double</code>类型，再转换成<code>int</code>类型</strong>，比如下面两种方法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = (<span class="built_in">int</span>)Convert.ToDouble(<span class="string">&quot;5.5&quot;</span>);</span><br><span class="line"><span class="built_in">int</span> a = (<span class="built_in">int</span>)Double.Parse(<span class="string">&quot;5.5&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;C# 是一门强类型语言，对类型的要求很严格，类型转换的方式有两种：&lt;strong&gt;隐式类型转换&lt;/strong&gt;和&lt;strong&gt;显式类型转换&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;隐式类型转换&quot;&gt;&lt;a href=&quot;#隐式类型转换&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="电子电路社" scheme="https://satorimarch.github.io/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE/"/>
    
    <category term="c#教程" scheme="https://satorimarch.github.io/categories/%E7%94%B5%E5%AD%90%E7%94%B5%E8%B7%AF%E7%A4%BE/c-%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="c#" scheme="https://satorimarch.github.io/tags/c/"/>
    
  </entry>
  
</feed>
